	Chef is playing a card game with his friend Rick Sanchez. He recently won against Rick's grandson Morty; however, Rick is not as easy to beat. The rules of this game are as follows:

The power of a positive integer is the sum of digits of that integer. For example, the power of 13 is 1+3=4.
Chef and Rick receive randomly generated positive integers. For each player, let's call the integer he received final power.
The goal of each player is to generate a positive integer such that its power (defined above) is equal to his final power.
The player who generated the integer with fewer digits wins the game. If both have the same number of digits, then Rick cheats and wins the game.
You are given the final power of Chef PC and the final power of Rick PR. Assuming that both players play optimally, find the winner of the game and the number of digits of the integer he generates.
  
  
 The Problem  Seems to be solved by Min_coin_change_problem but the problem can also be solved simply by some trick think that that we have to represent each number as a sum
 of numbers from 1 to 9 such that minimum numbers are required so thinking greedly we can just add number of  9's  succh that sum of 9 < ActualSum then there would definitely one 
 possible number that can be added to complete the sum.
  
  
  public static void main(String[] args) {
		// TODO Auto-generated method stub
		Scanner scn = new  Scanner(System.in);
		int t = scn.nextInt();
		while(t > 0) {
			int Pc = scn.nextInt();
			int Pr = scn.nextInt();
			
			int ansP = (int)Math.ceil(Pc / 9.0);
			int ansR = (int)Math.ceil(Pr / 9.0);
			
			if (ansP >= ansR) {
				System.out.println(1 + " " + ansR);
			}else{
				System.out.println(0 + " " + ansP);
			}
			t--;
		}
		
	}
